# railway.toml

# We still use Nixpacks to provide the base Node.js environment.
# Nixpacks will detect package.json and set up Node.js.
# The buildCommand then takes over all subsequent build steps.
[build]
builder = "NIXPACKS"
# Nixpacks will make Node.js and npm available.
# Our script handles all npm install steps.
# We also ensure the scripts are executable.
buildCommand = "chmod +x ./railway-unified-build.sh && chmod +x ./railway-start.sh && ./railway-unified-build.sh"

# The deploy section defines what happens after the build is successful.
[deploy]
# This is your existing script that orchestrates the actual Twilio deployments.
startCommand = "./railway-start.sh"

# Optional: Add healthcheck if your service runs a persistent server
# healthcheckPath = "/"
# healthcheckTimeout = 100
# restartPolicyType = "ON_FAILURE" # Or "ALWAYS", "NEVER"
